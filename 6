#include <iostream>
using namespace std;

// Base class
class Shape {
public:
    // Virtual function
    virtual void displayArea() {
        cout << "This is the base class!" << endl;
    }
    
    // Pure virtual function
    virtual double calculateArea() = 0;
};

// Derived class: Rectangle
class Rectangle : public Shape {
private:
    double length;
    double width;
public:
    Rectangle(double len, double wid) : length(len), width(wid) {}
    
    // Override the base class virtual function
    void displayArea() {
        cout << "Rectangle Area: " << calculateArea() << endl;
    }
    
    // Implement the pure virtual function
    double calculateArea() {
        return length * width;
    }
};

int main() {
    Shape* shape = new Rectangle(5, 6);
    shape->displayArea();
    
    delete shape;
    
    return 0;
}
